import 'package:flutter/material.dart';
import 'package:get/get.dart';

class BottomNavBar extends StatefulWidget {
  @override
  _BottomNavBarState createState() => _BottomNavBarState();
}

class _BottomNavBarState extends State<BottomNavBar> {
  int _currentIndex = 0;
  PageController _pageController = PageController();
  List<Widget> _screens = [HomeScreen(), FavoritedScreen()];
  void _onPageChanged(int index) {
    setState(() {
      _currentIndex = index;
    });
  }

  void _omItemTapped(int selectedIndex) {
    _pageController.jumpToPage(selectedIndex);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: _currentIndex,
        onTap: _omItemTapped,
        items: [
          //  Changed to label, cause title is deprecated
          BottomNavigationBarItem(
            label: 'Home',
            icon: Icon(
              Icons.home,
              color: _currentIndex == 0 ? Colors.blue : Colors.grey,
            ),
          ),
          BottomNavigationBarItem(
            label: 'Favorites',
            icon: Icon(
              Icons.favorite,
              color: _currentIndex == 1 ? Colors.blue : Colors.grey,
            ),
          ),
        ],
      ),
      body: PageView(
        controller: _pageController,
        children: _screens,
        onPageChanged: _onPageChanged,
      ),
    );
  }
}

// User Model
class User {
  // Added the final keyword so that the title cant be changed afterwards, but the is favorited can
  final String title;
  bool isFavorited;

// added false as the default value if isFavorited is not provided
  User({
    this.title,
    this.isFavorited = false,
  });
}

// Controller
class UserController extends GetxController {
// Moved it into the controller
  List<User> userList = [
    User(title: 'Lilly'),
    User(title: 'Bob'),
    User(title: 'Marcus'),
    User(title: 'Ian'),
  ];

  void toggleFavorite(User user) {
    user.isFavorited = !user.isFavorited;
    update();
  }
}

// Home Screen
class HomeScreen extends StatelessWidget {
  final UserController userController = Get.find<UserController>();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Home Screen'),
      ),
      body: GetBuilder(
        init: userController,
        builder: (userController) => ListView.builder(
          itemBuilder: (BuildContext context, int index) {
            return Stack(
              children: [
                Container(
                  margin: EdgeInsets.only(bottom: 8),
                  height: 150,
                  color: Colors.black45,
                  child: Center(
                    child: Text(userController.userList[index].title,
                        style: TextStyle(fontSize: 24)),
                  ),
                ),
                Positioned(
                  top: 15.0,
                  right: 15.0,
                  child: GestureDetector(
                    onTap: () {
                      userController
                          .toggleFavorite(userController.userList[index]);
                      print('Added to favorites');
                    },
                    child: Icon(
                      userController.userList[index].isFavorited
                          ? Icons.favorite
                          : Icons.favorite_border,
                      size: 40,
                      color: userController.userList[index].isFavorited
                          ? Colors.red
                          : Colors.grey,
                    ),
                  ),
                ),
              ],
            );
          },
          itemCount: userController.userList.length,
        ),
      ),
    );
  }
}

// Favorites Screen
class FavoritedScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final UserController userController = Get.put(UserController());

    return Scaffold(
      appBar: AppBar(title: Text('Favorites Screen')),
      body: GetBuilder(
        init: userController,
        builder: (userController) => ListView.builder(
          itemBuilder: (BuildContext context, int index) {
            return Stack(
              children: [
                Container(
                  margin: EdgeInsets.only(bottom: 8),
                  height: 110,
                  color: Colors.black26,
                  child: Center(
                    child: Text(
                        userController.userList
                            .where((element) => element.isFavorited == true)
                            .toList()[index]
                            .title,
                        style: TextStyle(fontSize: 24)),
                  ),
                ),
                Positioned(
                  top: 15.0,
                  right: 15.0,
                  child: GestureDetector(
                    // Calls the togglesFavorites passing the current user so that the isFavorited property is altered
                    onTap: () => userController.toggleFavorite(userController
                        .userList
                        .where((element) => element.isFavorited == true)
                        .toList()[index]),
                    child: Icon(Icons.favorite, size: 40, color: Colors.red),
                  ),
                ),
              ],
            );
          },
          itemCount: userController.userList
              .where((element) => element.isFavorited == true)
              .toList()
              .length,
        ),
      ),
    );
  }
}
